{:highlights [{:id #uuid "6347132a-8587-4c49-b9ec-a05e6f876e0b", :page 2, :position {:bounding {:x1 0, :y1 -2, :x2 748.23291015625, :y2 1044.9788818359375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.6053466796875, :y1 1003.483154296875, :x2 748.23291015625, :y2 1020.483154296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605934143066406, :y1 1027.9788818359375, :x2 314.7066116333008, :y2 1044.9788818359375, :width 799.9999999999999, :height 1317.6470588235293}), :page 2}, :content {:text "Behavior Driven Development (BDD) is a software development process that originally emerged from Test Driven Development (TDD)."}, :properties {:color "purple"}} {:id #uuid "6347133f-6239-4d6e-ba24-cde5de72e6e3", :page 2, :position {:bounding {:x1 0, :y1 -2, :x2 748.6267242431641, :y2 1130.2698974609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 560.425048828125, :y1 1063.274169921875, :x2 748.232666015625, :y2 1080.274169921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60749816894531, :y1 1087.7913818359375, :x2 748.6267242431641, :y2 1104.7913818359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.606201171875, :y1 1113.2698974609375, :x2 105.78042602539062, :y2 1130.2698974609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 2}, :content {:text "BDD is using examples at multiple levels to create a shared understanding and surface uncertainty to deliver software that matter.”"}, :properties {:color "purple"}} {:id #uuid "6347138d-9ea7-4f0f-b0b8-84e442e2c465", :page 2, :position {:bounding {:x1 0, :y1 -2, :x2 747.9375076293945, :y2 1190.0823974609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59973907470703, :y1 1147.592529296875, :x2 747.9375076293945, :y2 1164.592529296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60576248168945, :y1 1173.0823974609375, :x2 524.3979377746582, :y2 1190.0823974609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 2}, :content {:text "BDD uses examples to illustrate the behavior of the system that are written in a readable and understandable language for everyone involved in the development."}, :properties {:color "yellow"}} {:id #uuid "634713a9-cfda-4ba0-8f2e-68b61c473f2c", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 748.5087890625, :y2 300.8636474609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.601444244384766, :y1 38.0350341796875, :x2 249.03171157836914, :y2 63.0350341796875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60575485229492, :y1 77.97222900390625, :x2 354.74225997924805, :y2 94.97222900390625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92799377441406, :y1 112.295654296875, :x2 748.3668823242188, :y2 129.295654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9273681640625, :y1 137.7855224609375, :x2 748.5087890625, :y2 154.7855224609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.927978515625, :y1 163.2698974609375, :x2 427.72576904296875, :y2 180.2698974609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.927978515625, :y1 194.6412353515625, :x2 556.7973022460938, :y2 211.6412353515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92815399169922, :y1 226.99481201171875, :x2 363.7772445678711, :y2 243.99481201171875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92863464355469, :y1 258.3599853515625, :x2 748.0853271484375, :y2 275.3599853515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92798614501953, :y1 283.8636474609375, :x2 178.3721466064453, :y2 300.8636474609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "BDD – Key features Behavior Driven Development focuses on − Providing a shared process and shared tools promoting communication to the software developers, business analysts and stakeholders to collaborate on software development, with the aim of delivering product with business value. What a system should do and not on how it should be implemented. Providing better readability and visibility. Verifying not only the working of the software but also that it meets the customer’s expectations."}, :properties {:color "blue"}} {:id #uuid "634713bc-04b3-4620-98be-ff41b66b5528", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 748.3114013671875, :y2 606.7445068359375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 167.5389404296875, :y1 539.7432861328125, :x2 748.3114013671875, :y2 556.7432861328125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.597084045410156, :y1 565.2386474609375, :x2 748.1748428344727, :y2 582.2386474609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605716705322266, :y1 589.7445068359375, :x2 290.9335060119629, :y2 606.7445068359375, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "unless requirements are obtained correctly, it would be expensive to fix the defects resulting from misunderstanding the requirements at a later stage. Further, the end product may not meet the customer’s expectations."}, :properties {:color "green"}} {:id #uuid "634713d5-3513-43ad-981a-33c7d43a9c53", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 466.9961853027344, :y2 740.0787353515625, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 624.061279296875, :x2 435.0189208984375, :y2 641.061279296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.927978515625, :y1 659.3523559570312, :x2 293.4620666503906, :y2 676.3523559570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.927978515625, :y1 691.7135620117188, :x2 466.9961853027344, :y2 708.7135620117188, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92798614501953, :y1 723.0787353515625, :x2 357.9587173461914, :y2 740.0787353515625, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "The need of the hour is a development approach that − Is based on the requirements. Focuses on requirements throughout the development. Ensures that the requirements are met."}, :properties {:color "blue"}} {:id #uuid "634713e1-89ac-45f4-a011-8ea2ec5530a5", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 748.0927963256836, :y2 1004.7916870117188, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60575485229492, :y1 799.5570068359375, :x2 274.5124168395996, :y2 816.5570068359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92800903320312, :y1 834.8367309570312, :x2 531.1802368164062, :y2 851.8367309570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9374008178711, :y1 867.1979370117188, :x2 748.0927963256836, :y2 884.1979370117188, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.927978515625, :y1 891.7132568359375, :x2 647.5054931640625, :y2 908.7132568359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92798614501953, :y1 924.0573120117188, :x2 685.7437210083008, :y2 941.0573120117188, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92798614501953, :y1 955.4224853515625, :x2 643.9553909301758, :y2 972.4224853515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92799377441406, :y1 987.7916870117188, :x2 340.5208740234375, :y2 1004.7916870117188, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "Behavior Driven Development − Derives examples of different expected behaviors of the system. Enables writing the examples in a language using the business domain terms to ensure easy understanding by everyone involved in the development including the customers. Gets the examples ratified with customer from time to time by means of conversations. Focuses on the customer requirements (examples) throughout the development. Uses examples as acceptance tests."}, :properties {:color "blue"}} {:id #uuid "634713eb-29c0-43aa-8579-4718e37198d7", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 309.3568458557129, :y2 1158.7037353515625, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60340118408203, :y1 1036.0745849609375, :x2 196.91480255126953, :y2 1061.0745849609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 1075.04052734375, :x2 309.3568458557129, :y2 1092.04052734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92799377441406, :y1 1110.336669921875, :x2 305.6451416015625, :y2 1127.336669921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92833709716797, :y1 1141.7037353515625, :x2 308.2112045288086, :y2 1158.7037353515625, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "BDD Practices The two main practices of BDD are − Specification by Example (SbE) Test Driven Development (TDD)"}, :properties {:color "blue"}} {:id #uuid "63471412-a2e7-43a2-899e-1743ade6f059", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 748.3910446166992, :y2 1276.3480224609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59686279296875, :y1 1198.2896728515625, :x2 273.32305908203125, :y2 1220.2896728515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60448455810547, :y1 1233.872802734375, :x2 748.3910446166992, :y2 1250.872802734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605735778808594, :y1 1259.3480224609375, :x2 322.93172454833984, :y2 1276.3480224609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "Specification by Example Specification by Example (SbE) uses examples in conversations to illustrate the business rules and the behavior of the software to be built."}, :properties {:color "purple"}} {:id #uuid "6347148f-5eec-43a3-932f-6f6ec2150616", :page 4, :position {:bounding {:x1 0, :y1 -2, :x2 800.0048217773438, :y2 84.1917724609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 141.546875, :y1 37.9949951171875, :x2 800.0048217773438, :y2 63.2918701171875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 41.7137451171875, :x2 748.39501953125, :y2 58.7137451171875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605751037597656, :y1 67.1917724609375, :x2 650.7637100219727, :y2 84.1917724609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 4}, :content {:text "Specification by Example enables the product owners, business analysts, testers and the developers to eliminate common misunderstandings about the business requirements."}, :properties {:color "purple"}} {:id #uuid "634714a4-54be-44a3-95a0-929b446ac983", :page 4, :position {:bounding {:x1 0, :y1 -2, :x2 748.62939453125, :y2 268.5042724609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60456466674805, :y1 106.1131591796875, :x2 273.1333885192871, :y2 128.1131591796875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.598880767822266, :y1 141.71649169921875, :x2 748.498722076416, :y2 158.71649169921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 166.2132568359375, :x2 151.13360977172852, :y2 183.2132568359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60268020629883, :y1 201.508544921875, :x2 748.1086006164551, :y2 218.508544921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 226.0257568359375, :x2 748.62939453125, :y2 243.0257568359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60573959350586, :y1 251.5042724609375, :x2 482.48427963256836, :y2 268.5042724609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 4}, :content {:text "Test Driven Development Test Driven Development, in the context of BDD, turns examples into human readable, executable specifications. The developers use these specifications as a guide to implement increments of new functionality. This, results in a lean codebase and a suite of automated regression tests that keep the maintenance costs low throughout the lifetime of the software."}, :properties {:color "purple"}} {:id #uuid "634714b7-0a62-4b04-a27d-4aba779a0ddb", :page 4, :position {:bounding {:x1 0, :y1 -2, :x2 748.0702819824219, :y2 683.2073974609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.607540130615234, :y1 291.9649658203125, :x2 153.37881088256836, :y2 316.9649658203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.595279693603516, :y1 331.89410400390625, :x2 746.8540687561035, :y2 348.89410400390625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 357.3948974609375, :x2 211.3294219970703, :y2 374.3948974609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 391.717529296875, :x2 387.8819274902344, :y2 408.717529296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92269897460938, :y1 426.030029296875, :x2 748.0702819824219, :y2 443.030029296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92849731445312, :y1 451.5042724609375, :x2 158.3078155517578, :y2 468.5042724609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92798614501953, :y1 483.8697509765625, :x2 585.5268020629883, :y2 500.8697509765625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92798614501953, :y1 515.2349853515625, :x2 194.05841064453125, :y2 532.2349853515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 119.25018310546875, :y1 557.4053344726562, :x2 457.56036376953125, :y2 574.4053344726562, :width 799.9999999999999, :height 1317.6470588235293} {:x1 119.25020599365234, :y1 588.7506103515625, :x2 526.467399597168, :y2 605.7506103515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92142486572266, :y1 640.7221069335938, :x2 747.8054580688477, :y2 657.7221069335938, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.927978515625, :y1 666.2073974609375, :x2 204.52110290527344, :y2 683.2073974609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 4}, :content {:text "Agile BDD In Agile software development, BDD method is used to come to a common understanding on the pending specifications. The following steps are executed in Agile BDD − The developers and the product owner collaboratively write pending specifications in a plain text editor. The product owner specifies the behaviors they expect from the system. The developers Fill the specifications with these behavior details. Ask questions based on their understanding of the system. The current system behaviors are considered to see if the new feature will break any of the existing features."}, :properties {:color "blue"}} {:id #uuid "63471520-ebab-4413-98ae-f2482d6ae6ad", :page 4, :position {:bounding {:x1 0, :y1 -2, :x2 747.8720932006836, :y2 1046.951904296875, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60134506225586, :y1 713.5179443359375, :x2 304.022518157959, :y2 738.5179443359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 753.4722290039062, :x2 341.6676940917969, :y2 770.4722290039062, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.604698181152344, :y1 787.795654296875, :x2 747.8720932006836, :y2 804.795654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605751037597656, :y1 813.2698974609375, :x2 297.1738052368164, :y2 830.2698974609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92229461669922, :y1 847.592529296875, :x2 487.4083557128906, :y2 864.592529296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.93698120117188, :y1 879.9479370117188, :x2 487.1341552734375, :y2 896.9479370117188, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92227935791016, :y1 912.2916870117188, :x2 455.1575012207031, :y2 929.2916870117188, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92105102539062, :y1 943.6568603515625, :x2 421.1170654296875, :y2 960.6568603515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60573196411133, :y1 995.6283569335938, :x2 665.5426826477051, :y2 1012.6283569335938, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60573959350586, :y1 1029.951904296875, :x2 408.7760887145996, :y2 1046.951904296875, :width 799.9999999999999, :height 1317.6470588235293}), :page 4}, :content {:text "Agile Manifesto and BDD The Agile Manifesto states the following − We are uncovering better ways of developing software by doing it and helping others do it. Through this work, we have come to value − Individuals and interactions − over Processes and tools Working software − over Comprehensive documentation Customer collaboration − over Contract negotiation Responding to change − over Following a plan That is, while there is value in the items on the right, we value the items on the left more. BDD aligns itself to the Agile manifesto as follows −"}, :properties {:color "blue"}} {:id #uuid "6347152a-367a-4173-b835-605cad82d560", :page 5, :position {:bounding {:x1 0, :y1 -2, :x2 739.728759765625, :y2 341.840087890625, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 172.77197265625, :y1 49.3656005859375, :x2 627.7193603515625, :y2 65.3656005859375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 61.435760498046875, :y1 86.6317138671875, :x2 371.2605285644531, :y2 102.6317138671875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.46197509765625, :y1 86.6317138671875, :x2 642.440673828125, :y2 102.6317138671875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 61.435760498046875, :y1 107.215087890625, :x2 96.58908081054688, :y2 123.215087890625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 61.43581771850586, :y1 145.43841552734375, :x2 311.279598236084, :y2 161.43841552734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.45916748046875, :y1 145.43841552734375, :x2 734.7720336914062, :y2 161.43841552734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 61.435760498046875, :y1 166.043212890625, :x2 161.99896240234375, :y2 182.043212890625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.4605407714844, :y1 166.043212890625, :x2 570.505615234375, :y2 182.043212890625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 61.435760498046875, :y1 204.26654052734375, :x2 716.8373413085938, :y2 220.26654052734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.45660400390625, :y1 224.871337890625, :x2 722.519775390625, :y2 240.871337890625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.45660400390625, :y1 246.427978515625, :x2 715.2137451171875, :y2 262.427978515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.45660400390625, :y1 267.027587890625, :x2 501.0085144042969, :y2 283.027587890625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 61.435760498046875, :y1 305.25091552734375, :x2 722.563232421875, :y2 321.25091552734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 409.45660400390625, :y1 325.840087890625, :x2 739.728759765625, :y2 341.840087890625, :width 799.9999999999999, :height 1317.6470588235293}), :page 5}, :content {:text "Agile Manifesto BDD Alignment Individuals and interactions over processes and tools. BDD is about having conversations. Working software over comprehensive documentation. BDD focuses on making it easy to create software that is of business value. Customer collaboration over contract negotiation. BDD focuses on scenarios based on ideas with continuous communication with the customer as the development progresses. It is not based on any promises. Responding to change over following a plan. BDD focuses on continuous communication and collaboration that facilitates absorption of changes."}, :properties {:color "blue"}} {:id #uuid "634718d0-7e11-49ad-8519-05b166400a94", :page 7, :position {:bounding {:x1 0, :y1 -2, :x2 748.3501052856445, :y2 243.0198974609375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 442.6542663574219, :y1 150.520751953125, :x2 748.1168823242188, :y2 167.520751953125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59946823120117, :y1 176.0198974609375, :x2 747.8661308288574, :y2 193.0198974609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59754180908203, :y1 200.5257568359375, :x2 748.3501052856445, :y2 217.5257568359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.6060676574707, :y1 226.0198974609375, :x2 297.0191993713379, :y2 243.0198974609375, :width 799.9999999999999, :height 1317.6470588235293}), :page 7}, :content {:text " a defect as and when it is introduced and fixing it immediately would be cost effective. Therefore, there is a necessity of writing test cases at every stage of development and testing. This is what our traditional testing practices have taught us, which is often termed as Test-early."}, :properties {:color "blue"}} {:id #uuid "63471bd7-7a5e-478a-9e8b-91b68e75cf13", :page 8, :position {:bounding {:x1 0, :y1 -2, :x2 748.557975769043, :y2 970.483154296875, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.604984283447266, :y1 184.1212158203125, :x2 252.39748001098633, :y2 209.1212158203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.5975456237793, :y1 224.05035400390625, :x2 748.1669425964355, :y2 241.05035400390625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 249.55116271972656, :x2 305.49390029907227, :y2 266.5511779785156, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.5975456237793, :y1 283.873779296875, :x2 747.769847869873, :y2 300.873779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60575866699219, :y1 309.3480529785156, :x2 100.13372802734375, :y2 326.3480529785156, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92729187011719, :y1 343.670654296875, :x2 283.8056640625, :y2 360.670654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92729187011719, :y1 376.0260314941406, :x2 314.2934265136719, :y2 393.0260314941406, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.599002838134766, :y1 427.0091857910156, :x2 748.103214263916, :y2 444.0091857910156, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60008239746094, :y1 452.4886779785156, :x2 747.8411102294922, :y2 469.4886779785156, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 477.0101013183594, :x2 701.9355773925781, :y2 494.0101013183594, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60573959350586, :y1 512.2898559570312, :x2 585.4380760192871, :y2 529.2898559570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.603538513183594, :y1 552.7462158203125, :x2 314.49556732177734, :y2 577.7462158203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605838775634766, :y1 592.6753540039062, :x2 569.6746864318848, :y2 609.6753540039062, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 627.014404296875, :x2 427.9689025878906, :y2 644.014404296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 661.326904296875, :x2 196.6006622314453, :y2 678.326904296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 696.6023559570312, :x2 206.50021362304688, :y2 713.6023559570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60918426513672, :y1 730.920654296875, :x2 748.557975769043, :y2 747.920654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605709075927734, :y1 755.4320068359375, :x2 77.01870727539062, :y2 772.4320068359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 790.7273559570312, :x2 437.22760009765625, :y2 807.7273559570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 825.045654296875, :x2 748.382080078125, :y2 842.045654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605743408203125, :y1 849.5570068359375, :x2 86.6213150024414, :y2 866.5570068359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 884.8367309570312, :x2 180.3360595703125, :y2 901.8367309570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.608238220214844, :y1 919.170654296875, :x2 466.3634948730469, :y2 936.170654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 953.483154296875, :x2 607.1611671447754, :y2 970.483154296875, :width 799.9999999999999, :height 1317.6470588235293}), :page 8}, :content {:text "Test-First Approach The Test-First approach replaces the inside-out (write code and then test) to outside-in (write test and then code) way of development. This approach is incorporated into the following software development methodologies (that are Agile also) − eXtreme Programming (XP). Test Driven Development (TDD). In these methodologies, the developer designs and writes the Unit tests for a code module before writing a single line of the code module. The developer then creates the code module with the goal of passing the Unit test. Thus, these methodologies use Unit testing to drive the development. The fundamental point to note that the goal is development based on testing. Red-Green-Refactor Cycle Test Driven Development is used to develop the code guided by Unit tests. Step 1 − Consider a code module that is to be written. Step 2 − Write a test Step 3 − Run the test. The test fails, as the code is still not written. Hence, Step 2 is usually referred to as write a test to fail. Step 4 − Write minimum code possible to pass the test. Step 5 − Run all the tests to ensure that they all still pass. Unit tests are automated to facilitate this step. Step 6 − Refactor. Step 7 − Repeat Step 1 to Step 6 for the next code module. Each cycle should be very short, and a typical hour should contain many cycles."}, :properties {:color "blue"}} {:id #uuid "63471c7a-6c20-4f6f-b550-8206670a42b1", :page 9, :position {:bounding {:x1 0, :y1 0, :x2 661.8877563476562, :y2 516.8541870117188, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 384.83270263671875, :x2 554.3267211914062, :y2 401.83270263671875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9291000366211, :y1 420.133544921875, :x2 291.8296203613281, :y2 437.133544921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92374420166016, :y1 451.5006103515625, :x2 351.13525390625, :y2 468.5006103515625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 149.578125, :y1 476.5416259765625, :x2 155.3959503173828, :y2 516.8541870117188, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.92263793945312, :y1 483.8697509765625, :x2 661.8877563476562, :y2 500.8697509765625, :width 799.9999999999999, :height 1317.6470588235293}), :page 9}, :content {:text "This is also popularly known as the Red-Green-Refactor cycle, where − Red − Writing a test that fails. Green − Writing code to pass the test. Refactor − Remove duplication and improve the code to the acceptable standards."}, :properties {:color "blue"}} {:id #uuid "63471f80-36a9-4954-a1fc-1df4ebf1412b", :page 3, :position {:bounding {:x1 0, :y1 -2, :x2 799, :y2 1276.359375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 16, :x2 799, :y2 16, :width 799.9999999999999, :height 1317.6470588235293} {:x1 167.53125, :y1 539.734375, :x2 748.3244018554688, :y2 556.734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59375, :y1 565.234375, :x2 748.1871337890625, :y2 582.234375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 589.75, :x2 290.9371643066406, :y2 606.75, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 624.0625, :x2 435.0225524902344, :y2 641.0625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 659.359375, :x2 293.4715881347656, :y2 676.359375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 691.71875, :x2 467.0057067871094, :y2 708.71875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 723.09375, :x2 357.9682312011719, :y2 740.09375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 775.046875, :x2 746.5758666992188, :y2 792.046875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 799.5625, :x2 274.5160217285156, :y2 816.5625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 834.84375, :x2 531.1897583007812, :y2 851.84375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 867.203125, :x2 748.0928955078125, :y2 884.203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 891.71875, :x2 647.5150146484375, :y2 908.71875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 924.0625, :x2 685.7532348632812, :y2 941.0625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 955.4375, :x2 643.9649047851562, :y2 972.4375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 987.796875, :x2 340.5303955078125, :y2 1004.796875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 1036.078125, :x2 196.9207763671875, :y2 1061.078125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 1075.046875, :x2 309.3604431152344, :y2 1092.046875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1110.34375, :x2 305.6546630859375, :y2 1127.34375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1141.71875, :x2 308.22039794921875, :y2 1158.71875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 1198.296875, :x2 273.3355712890625, :y2 1220.296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 1233.875, :x2 748.3959350585938, :y2 1250.875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 1259.359375, :x2 322.93536376953125, :y2 1276.359375, :width 799.9999999999999, :height 1317.6470588235293}), :page 3}, :content {:text "unless requirements are obtained correctly, it would be expensive to fix the defects resulting from misunderstanding the requirements at a later stage. Further, the end product may not meet the customer’s expectations. The need of the hour is a development approach that − Is based on the requirements. Focuses on requirements throughout the development. Ensures that the requirements are met. A development approach that can take care of the above-mentioned requirements is BDD. Thus, Behavior Driven Development − Derives examples of different expected behaviors of the system. Enables writing the examples in a language using the business domain terms to ensure easy understanding by everyone involved in the development including the customers. Gets the examples ratified with customer from time to time by means of conversations. Focuses on the customer requirements (examples) throughout the development. Uses examples as acceptance tests. BDD Practices The two main practices of BDD are − Specification by Example (SbE) Test Driven Development (TDD) Specification by Example Specification by Example (SbE) uses examples in conversations to illustrate the business rules and the behavior of the software to be built."}, :properties {:color "yellow"}} {:id #uuid "6347217f-fcc9-4a85-915d-6b00d314ae75", :page 9, :position {:bounding {:x1 0, :y1 -2, :x2 748.6973266601562, :y2 1237.140625, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 974.3125, :x2 247.0884552001953, :y2 999.3125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.609375, :y1 1014.265625, :x2 480.0178527832031, :y2 1031.265625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1049.5625, :x2 748.6471557617188, :y2 1066.5625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1074.0625, :x2 259.4872741699219, :y2 1091.0625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1106.421875, :x2 748.51904296875, :y2 1123.421875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1130.921875, :x2 667.5489501953125, :y2 1147.921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1163.28125, :x2 748.6973266601562, :y2 1180.28125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1188.765625, :x2 223.7044677734375, :y2 1205.765625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 1220.140625, :x2 579.4524536132812, :y2 1237.140625, :width 799.9999999999999, :height 1317.6470588235293}), :page 9}, :content {:text "Advantages of TDD The benefits or advantages of Test Driven Development are − The developer needs to understand first, what the desired result should be and how to test it before creating the code. The code for a component is finished only when the test passes and the code is refactored. This ensures testing and refactoring before the developer moves on to the next test. As the suite of Unit tests is run after each refactoring, feedback that each component is still working is constant. The Unit tests act as living documentation that is always up to the data."}, :properties {:color "blue"}} {:id #uuid "6347218b-3a57-474e-a3e3-3144413dbfe0", :page 10, :position {:bounding {:x1 0, :y1 -2, :x2 748.6546630859375, :y2 362.640625, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 41.71875, :x2 747.906982421875, :y2 58.71875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 67.203125, :x2 747.0206909179688, :y2 84.203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 91.71875, :x2 722.4743041992188, :y2 108.71875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 124.0625, :x2 748.4219970703125, :y2 141.0625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 148.578125, :x2 629.6861572265625, :y2 165.578125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 180.921875, :x2 748.6546630859375, :y2 197.921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 206.421875, :x2 748.2022705078125, :y2 223.421875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 230.921875, :x2 172.83029174804688, :y2 247.921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 263.28125, :x2 747.8441772460938, :y2 280.28125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 287.796875, :x2 252.48086547851562, :y2 304.796875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 320.140625, :x2 747.7330932617188, :y2 337.140625, :width 799.9999999999999, :height 1317.6470588235293} {:x1 85.9375, :y1 345.640625, :x2 160.06797790527344, :y2 362.640625, :width 799.9999999999999, :height 1317.6470588235293}), :page 10}, :content {:text "If a defect is found, the developer creates a test to reveal that defect and then modify the code so that the test passes and the defect is fixed. This reduces the debugging time. All the other tests are also run and when they pass, it ensures that the existing functionality is not broken The developer can make design decisions and refactor at any time and the running of the tests ensures that the system is still working. This makes the software maintainable. The developer has the confidence to make any change since if the change impacts any existing functionality, the same is revealed by running the tests and the defects can be fixed immediately. On each successive test run, all the previous defect fixes are also verified and the repetition of same defect is reduced. As most of the testing is done during the development itself, the testing before delivery is shortened."}, :properties {:color "blue"}} {:id #uuid "63473ed0-5709-4020-86e7-186ade103e41", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 736.09375, :y2 431.264404296875, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59593200683594, :y1 276.030029296875, :x2 180.75823974609375, :y2 293.030029296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60576629638672, :y1 311.3210754394531, :x2 132.79759216308594, :y2 328.3210754394531, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605735778808594, :y1 345.639404296875, :x2 165.9240264892578, :y2 362.639404296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60573959350586, :y1 379.951904296875, :x2 167.65823364257812, :y2 396.951904296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60574722290039, :y1 414.264404296875, :x2 736.09375, :y2 431.264404296875, :width 799.9999999999999, :height 1317.6470588235293}), :page 14}, :content {:text "Story Framework As a [Role] I want [Feature] so that [Benefit] This means, ‘When a Feature is executed, the resulting Benefit is to the Person playing the Role.’"}, :properties {:color "blue"}} {:id #uuid "63473ee3-bbfa-4904-b3ea-c17e68c4cf43", :page 14, :position {:bounding {:x1 0, :y1 0, :x2 748.2219581604004, :y2 1271.639404296875, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.603370666503906, :y1 683.873779296875, :x2 205.1858901977539, :y2 700.873779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.598567962646484, :y1 718.186279296875, :x2 238.31382751464844, :y2 735.186279296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60881042480469, :y1 752.498779296875, :x2 214.76182556152344, :y2 769.498779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.6063117980957, :y1 786.811279296875, :x2 261.841064453125, :y2 803.811279296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.595314025878906, :y1 821.123779296875, :x2 747.7311782836914, :y2 838.123779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60576248168945, :y1 846.5980224609375, :x2 206.88218688964844, :y2 863.5980224609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60025405883789, :y1 880.920654296875, :x2 748.2219581604004, :y2 897.920654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60578155517578, :y1 906.4105224609375, :x2 282.50428009033203, :y2 923.4105224609375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60211181640625, :y1 946.8555908203125, :x2 254.54002380371094, :y2 971.8555908203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60580062866211, :y1 986.8003540039062, :x2 581.5602073669434, :y2 1003.8003540039062, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60771560668945, :y1 1025.7225341796875, :x2 98.49490356445312, :y2 1047.7225341796875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.594181060791016, :y1 1061.325927734375, :x2 158.09408569335938, :y2 1078.325927734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.59773254394531, :y1 1096.602294921875, :x2 315.572021484375, :y2 1113.602294921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60798263549805, :y1 1130.920654296875, :x2 380.4525451660156, :y2 1147.920654296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60112762451172, :y1 1169.8475341796875, :x2 139.99594116210938, :y2 1191.8475341796875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60585021972656, :y1 1205.435302734375, :x2 375.76222229003906, :y2 1222.435302734375, :width 799.9999999999999, :height 1317.6470588235293} {:x1 131.953125, :y1 1231.436279296875, :x2 137.7709503173828, :y2 1271.639404296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.596710205078125, :y1 1239.748779296875, :x2 280.6167297363281, :y2 1256.748779296875, :width 799.9999999999999, :height 1317.6470588235293}), :page 14}, :content {:text "Example Framework Given some initial context, When an event occurs, Then ensure some outcomes. This means, ‘Starting with the initial context, when a particular event happens, we know what the outcomes should be.’ Thus, the example shows the expected behavior of the system. The examples are used to illustrate different scenarios of the system. Story and Scenarios Let us consider the following illustration by Dan North about an ATM system. Story As a customer, I want to withdraw cash from an ATM, so that I do not have to wait in line at the bank. Scenarios There are two possible scenarios for this story. Scenario 1 − Account is in credit"}, :properties {:color "blue"}} {:id #uuid "63473eef-6680-4d9d-8767-23c3f98b9e2c", :page 15, :position {:bounding {:x1 0, :y1 -2, :x2 747.9972190856934, :y2 566.5570068359375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 0, :y1 -2, :x2 0, :y2 18, :width 799.9999999999999, :height 1317.6470588235293} {:x1 0, :y1 0, :x2 0, :y2 0, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39439392089844, :y1 41.71368408203125, :x2 291.42437744140625, :y2 58.71368408203125, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 76.030029296875, :x2 231.24057006835938, :y2 93.030029296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 110.342529296875, :x2 316.7095947265625, :y2 127.342529296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.40606689453125, :y1 145.633544921875, :x2 327.1611328125, :y2 162.633544921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39484405517578, :y1 179.951904296875, :x2 334.17230224609375, :y2 196.951904296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 214.264404296875, :x2 299.271728515625, :y2 231.264404296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 248.576904296875, :x2 309.73443603515625, :y2 265.576904296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.596710205078125, :y1 282.889404296875, :x2 457.5915222167969, :y2 299.889404296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39439392089844, :y1 318.180419921875, :x2 309.7380676269531, :y2 335.180419921875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 352.498779296875, :x2 231.24057006835938, :y2 369.498779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.40606689453125, :y1 386.811279296875, :x2 327.1611328125, :y2 403.811279296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39484405517578, :y1 421.123779296875, :x2 408.2558898925781, :y2 438.123779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 455.436279296875, :x2 325.43634033203125, :y2 472.436279296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 87.39832305908203, :y1 489.748779296875, :x2 309.73443603515625, :y2 506.748779296875, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.60421371459961, :y1 525.0398559570312, :x2 747.9972190856934, :y2 542.0398559570312, :width 799.9999999999999, :height 1317.6470588235293} {:x1 52.605857849121094, :y1 549.5570068359375, :x2 113.36483001708984, :y2 566.5570068359375, :width 799.9999999999999, :height 1317.6470588235293}), :page 15}, :content {:text "Given the account is in credit And the card is valid And the dispenser contains cash When the customer requests cash Then ensure the account is debited And ensure cash is dispensed And ensure the card is returned Scenario 2 − Account is overdrawn past the overdraft limit Given the account is overdrawn And the card is valid When the customer requests cash Then ensure a rejection message is displayed And ensure cash is not dispensed And ensure the card is returned The event is same in both the scenarios, but the context is different. Hence, the outcomes are different."}, :properties {:color "blue"}} {:id #uuid "63474075-f19e-41c6-8c7b-0f0aaa6b6b56", :page 17, :position {:bounding {:x1 151.03311157226562, :y1 564.2601318359375, :x2 747.5754699707031, :y2 581.2601318359375, :width 799.9999999999999, :height 1317.6470588235293}, :rects ({:x1 151.03311157226562, :y1 564.2601318359375, :x2 747.5754699707031, :y2 581.2601318359375, :width 799.9999999999999, :height 1317.6470588235293}), :page 17}, :content {:text "stration is by means of concrete and real life examples. These examples are used to"}, :properties {:color "blue"}}]}