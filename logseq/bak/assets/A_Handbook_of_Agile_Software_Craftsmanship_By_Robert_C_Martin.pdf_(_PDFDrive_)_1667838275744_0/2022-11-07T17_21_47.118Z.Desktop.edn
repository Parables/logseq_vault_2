{:highlights [{:id #uuid "6369373a-2b19-4faa-951b-efba255acb02", :page 35, :position {:bounding {:x1 300.4756774902344, :y1 110.21875, :x2 488.78125, :y2 125.21875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 300.4756774902344, :y1 110.21875, :x2 488.78125, :y2 125.21875, :width 690.1439999999999, :height 888.4800133333333}), :page 35}, :content {:text " LeBlanc’s law: Later equals never."}, :properties {:color "yellow"}} {:id #uuid "636937ba-bdbb-490d-80eb-c8051ff93566", :page 33, :position {:bounding {:x1 0, :y1 206, :x2 585.0972900390625, :y2 395.875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 206, :x2 0, :y2 226, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 222, :x2 0, :y2 242, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 238, :x2 0, :y2 258, :width 690.1439999999999, :height 888.4800133333333} {:x1 187.73870849609375, :y1 332.875, :x2 584.9442749023438, :y2 347.875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 348.875, :x2 584.4694213867188, :y2 363.875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 364.875, :x2 585.0972900390625, :y2 379.875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 380.875, :x2 334.25, :y2 395.875, :width 690.1439999999999, :height 888.4800133333333}), :page 33}, :content {:text " We will never be rid of code, because code represents the details of the requirements. At some level those details cannot be ignored or abstracted; they have to be specified. And specifying requirements in such detail that a machine can execute them is programming. Such a specification is code."}, :properties {:color "yellow"}} {:id #uuid "63693a07-cfb4-43b2-904d-cad64fa9b8c7", :page 37, :position {:bounding {:x1 0, :y1 62, :x2 585.1953125, :y2 209.21875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 62, :x2 0, :y2 82, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 78, :x2 0, :y2 98, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 94, :x2 0, :y2 114, :width 690.1439999999999, :height 888.4800133333333} {:x1 444.5032958984375, :y1 146.21875, :x2 585.1953125, :y2 161.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 162.21875, :x2 584.94189453125, :y2 177.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 178.21875, :x2 585.1337890625, :y2 193.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 194.21875, :x2 148.43878173828125, :y2 209.21875, :width 690.1439999999999, :height 888.4800133333333}), :page 37}, :content {:text "Most managers want good code, even when they are obsessing about the schedule. They may defend the schedule and requirements with passion; but that’s their job. It’s your job to defend the code with equal passion."}, :properties {:color "blue"}} {:id #uuid "63693ace-5834-4a11-a709-d2d3c2292ee2", :page 37, :position {:bounding {:x1 0, :y1 366, :x2 585.1356811523438, :y2 522.546875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 366, :x2 0, :y2 386, :width 690.1439999999999, :height 888.4800133333333} {:x1 298.8761901855469, :y1 491.546875, :x2 585.1356811523438, :y2 506.546875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 507.546875, :x2 425.9056396484375, :y2 522.546875, :width 690.1439999999999, :height 888.4800133333333}), :page 37}, :content {:text "The only way to make the deadline—the only way to go fast—is to keep the code as clean as possible at all times."}, :properties {:color "yellow"}} {:id #uuid "63693b60-8c0c-42a9-b7c6-387f90aa776e", :page 38, :position {:bounding {:x1 0, :y1 14, :x2 585.2116088867188, :y2 125.21875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 14, :x2 0, :y2 34, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 94.21875, :x2 585.2116088867188, :y2 109.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 110.21875, :x2 422.660888671875, :y2 125.21875, :width 690.1439999999999, :height 888.4800133333333}), :page 38}, :content {:text "Writing clean code requires the disciplined use of a myriad little techniques applied through a painstakingly acquired sense of “cleanliness.” "}, :properties {:color "yellow"}} {:id #uuid "63693bd2-0aa7-4f07-9f85-07d59350792b", :page 38, :position {:bounding {:x1 0, :y1 174, :x2 585.2078857421875, :y2 293.21875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 174, :x2 0, :y2 194, :width 690.1439999999999, :height 888.4800133333333} {:x1 176.82135009765625, :y1 262.21875, :x2 585.2078857421875, :y2 277.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 278.21875, :x2 488.42919921875, :y2 293.21875, :width 690.1439999999999, :height 888.4800133333333}), :page 38}, :content {:text "a programmer who writes clean code is an artist who can take a blank screen through a series of transformations until it is an elegantly coded system."}, :properties {:color "yellow"}} {:id #uuid "63693c32-f065-4e58-a049-daf2507b78f2", :page 38, :position {:bounding {:x1 0, :y1 254, :x2 354.1280822753906, :y2 579.078125, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 254, :x2 0, :y2 274, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 270, :x2 0, :y2 290, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 286, :x2 0, :y2 306, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 302, :x2 0, :y2 322, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 318, :x2 0, :y2 338, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 334, :x2 0, :y2 354, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 350, :x2 0, :y2 370, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 366, :x2 0, :y2 386, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 382, :x2 0, :y2 402, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 387.546875, :x2 323.2512512207031, :y2 402.546875, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 398, :x2 0, :y2 418, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 403.546875, :x2 338.2336730957031, :y2 418.546875, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 414, :x2 0, :y2 434, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 419.546875, :x2 167.94720458984375, :y2 434.546875, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 447.75, :x2 353.902587890625, :y2 461.75, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 462.421875, :x2 354.11773681640625, :y2 476.421875, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 477.078125, :x2 354.12615966796875, :y2 491.078125, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 491.75, :x2 354.0939025878906, :y2 505.75, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 506.421875, :x2 354.1114196777344, :y2 520.421875, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 521.078125, :x2 354.0939636230469, :y2 535.078125, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 535.75, :x2 354.1280822753906, :y2 549.75, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 550.40625, :x2 354.1116943359375, :y2 564.40625, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 565.078125, :x2 151.92906188964844, :y2 579.078125, :width 690.1439999999999, :height 888.4800133333333}), :page 38}, :content {:text "Bjarne Stroustrup, inventor of C++ and author of The C++ Programming Language I like my code to be elegant and efficient. The logic should be straightforward to make it hard for bugs to hide, the dependencies minimal to ease maintenance, error handling complete according to an articulated strategy, and performance close to optimal so as not to tempt people to make the code messy with unprincipled optimizations. Clean code does one thing well."}, :properties {:color "yellow"}} {:id #uuid "63693d37-346a-45fc-be91-80963d208c8e", :page 39, :position {:bounding {:x1 0, :y1 62, :x2 584.9522094726562, :y2 225.21875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 62, :x2 0, :y2 82, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 78, :x2 0, :y2 98, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 94, :x2 0, :y2 114, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 110, :x2 0, :y2 130, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 146.21875, :x2 583.99169921875, :y2 161.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 238.984375, :y1 161.796875, :x2 584.401611328125, :y2 170.796875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 162.21875, :x2 584.401611328125, :y2 177.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 178.21875, :x2 584.9442138671875, :y2 193.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 194.21875, :x2 584.9522094726562, :y2 209.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 210.21875, :x2 409.5708312988281, :y2 225.21875, :width 690.1439999999999, :height 888.4800133333333}), :page 39}, :content {:text "Pragmatic Dave Thomas and Andy Hunt said this a different way. They used the metaphor of broken windows.3 A building with broken windows looks like nobody cares about it. So other people stop caring. They allow more windows to become broken. Eventually they actively break them. They despoil the facade with graffiti and allow garbage to collect. One broken window starts the process toward decay."}, :properties {:color "yellow"}} {:id #uuid "63693de1-c5ab-4a2a-b195-0dc0c7832833", :page 39, :position {:bounding {:x1 0, :y1 254, :x2 585.2160034179688, :y2 409.21875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 254, :x2 0, :y2 274, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 270, :x2 0, :y2 290, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 286, :x2 0, :y2 306, :width 690.1439999999999, :height 888.4800133333333} {:x1 475.4959716796875, :y1 346.21875, :x2 584.9796752929688, :y2 361.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 362.21875, :x2 585.1035766601562, :y2 377.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 378.21875, :x2 585.2160034179688, :y2 393.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 394.21875, :x2 403.9187927246094, :y2 409.21875, :width 690.1439999999999, :height 888.4800133333333}), :page 39}, :content {:text " Bad code tries to do too much, it has muddled intent and ambiguity of purpose. Clean code is focused. Each function, each class, each module exposes a single-minded attitude that remains entirely undistracted, and unpolluted, by the surrounding details."}, :properties {:color "yellow"}} {:id #uuid "63693e0c-a18e-4b06-b9a6-3f980aa15bef", :page 39, :position {:bounding {:x1 0, :y1 318, :x2 359.55059814453125, :y2 559.078125, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 318, :x2 0, :y2 338, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 334, :x2 0, :y2 354, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 350, :x2 0, :y2 370, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 366, :x2 0, :y2 386, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 382, :x2 0, :y2 402, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 398, :x2 0, :y2 418, :width 690.1439999999999, :height 888.4800133333333} {:x1 0, :y1 414, :x2 0, :y2 434, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 426.21875, :x2 299.14593505859375, :y2 441.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 442.21875, :x2 323.634033203125, :y2 457.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 458.21875, :x2 184.7418212890625, :y2 473.21875, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 486.421875, :x2 359.4975280761719, :y2 500.421875, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 501.078125, :x2 359.543701171875, :y2 515.078125, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 515.75, :x2 359.55059814453125, :y2 529.75, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 530.421875, :x2 359.5274963378906, :y2 544.421875, :width 690.1439999999999, :height 888.4800133333333} {:x1 129.09375, :y1 545.078125, :x2 178.57247924804688, :y2 559.078125, :width 690.1439999999999, :height 888.4800133333333}), :page 39}, :content {:text "Grady Booch, author of Object Oriented Analysis and Design with Applications Clean code is simple and direct. Clean code reads like well-written prose. Clean code never obscures the designer’s intent but rather is full of crisp abstractions and straightforward lines of control."}, :properties {:color "yellow"}} {:id #uuid "63693e86-6878-401f-b22d-1e61184323de", :page 39, :position {:bounding {:x1 0, :y1 574, :x2 585.1972045898438, :y2 734.546875, :width 690.1439999999999, :height 888.4800133333333}, :rects ({:x1 0, :y1 574, :x2 0, :y2 594, :width 690.1439999999999, :height 888.4800133333333} {:x1 267.19879150390625, :y1 703.546875, :x2 585.1972045898438, :y2 718.546875, :width 690.1439999999999, :height 888.4800133333333} {:x1 105.09375, :y1 719.546875, :x2 285.8938903808594, :y2 734.546875, :width 690.1439999999999, :height 888.4800133333333}), :page 39}, :content {:text "Like a good novel, clean code should clearly expose the tensions in the problem to be solved."}, :properties {:color "yellow"}}]}